ToDo
--------

Need to implement PID control logic for the wheels. 
Need to coordinate the 6 wheels movement, use the servo loop to provide a constant time base.


Control loop needs to calculate the expected distance travelled for each wheel, compare to the actual distance traveled 
and use that to determine an error correction factor to apply to the PWM value.

Question: how can I implement this in a way that keeps the code well-structured?



MOVE:D10000.0,V400.0,D10000.0,V400.0,D10000.0,V400.0,D10000.0,V400.0,D10000.0,V400.0,D10000.0,V400.0
MOVE:D10000.0,V130.0,D10000.0,V130.0,D10000.0,V130.0,D10000.0,V130.0,D10000.0,V130.0,D10000.0,V130.0

===================================
Work Diary
===================================

30/12/2022
Refactored code, cleaned it up quite a bit.

3/1/2023
Got the code working with the motion control stuff disabled, so no smooth acceleration or deceleration. Made various
improvements, now got to the point where I'm happy to work on the PID integration.
Added PID to the wheel class, and updating it every servo tick (so every 50ms atm).
Got it generating a value from the requested velocity and a fake measured velocity.

TODO:
    - Need to calibrate each of the wheels
    - Tune the PID parameters!
    - Need to average the velocity values (surprise!)
    

